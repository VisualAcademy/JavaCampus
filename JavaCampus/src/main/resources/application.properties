# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html


# server.port=8080


# logging.level.org.springframework.web: DEBUG
# logging.level.org.hibernate: ERROR


# JPA 공통 
# spring.jpa.properties.hibernate.format_sql=true
## 스키마와 데이터가 데이터베이스에 적용되는 과정을 콘솔에 표시
logging.level.org.springframework.jdbc.datasource.ScriptUtils=debug
## 데이터와 스키마가 준비되어있다면, 모델 클래스를 바탕으로 테이블 생성할 필요없음
# spring.jpa.hibernate.ddl-auto=none 

# @Column 애너테이션으로 지정한 형태로 컬럼명 생성: FIRST_NAME 대신 FIRSTNAME으로 컬럼명 생성
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# H2 Database
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:javacampus
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2


# # Postgres
# spring.jpa.database=postgresql
# spring.datasource.url=jdbc:postgresql://localhost:5432/javacampus
# spring.datasource.username=
# spring.datasource.password=
# # spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# # spring.jpa.hibernate.ddl-auto=none
# # spring.jpa.hibernate.show-sql=true
# # # spring.datasource.driver-class-name=org.postgresql.Driver


# # MySQL: https://spring.io/guides/gs/accessing-data-mysql
# spring.jpa.hibernate.ddl-auto=update
# spring.datasource.url=jdbc:mysql://localhost:3306/javacampus?serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# spring.jpa.show-sql=true


# # MSSQL 
# spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
# spring.datasource.url=jdbc:sqlserver://localhost;databaseName=JavaCampus;integratedsecurity=true
# spring.datasource.url=jdbc:sqlserver://localhost;databaseName=JavaCampus
# spring.datasource.username=JavaCampus
# spring.datasource.password=
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
# spring.jpa.hibernate.ddl-auto=update


# spring.datasource.initialization-mode=always
# spring.datasource.initialize=true
# spring.datasource.schema=classpath:/schema.sql
# spring.datasource.continue-on-error=true


# # JSP 사용 환경: JavaCampus는 JSP 사용 안 함
# spring.mvc.view.prefix=/WEB-INF/jsp/
# spring.mvc.view.suffix=.jsp


# # Thymeleaf 설정: (기본값)
# spring.thymeleaf.template-loader-path:classpath:/templates
# spring.thymeleaf.suffix:.html
# spring.thymeleaf.cache:false


# https://stackoverflow.com/questions/47580247/optional-environment-variables-in-spring-app


foo=${CUSTOMCONNSTR_FOO:#{null}}


# # 프로필 설정
# spring.profiles.active=development
# applications-{프로필이름}.properties
# applications-development.properties
# applications-production.properties
# applications-staging.properties
# applications-test.properties
